{"version":3,"sources":["images/Rick_and_Morty_logo.png","components/Header.js","components/CharacterDetail.js","components/Input.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Main.js","services/local-storage.js","services/api.js","components/App.js","index.js"],"names":["Header","className","src","logo","alt","CharacterDetail","props","to","character","image","name","status","specie","origin","episodes","Input","type","id","value","filterName","onChange","ev","handleFilter","target","key","Filters","onSubmit","preventDefault","htmlFor","CharacterCard","gender","CharacterList","characters","length","characterElements","map","Main","filteredcharacters","initial","data","localStorage","getItem","JSON","parse","setItem","stringify","getApiData","fetch","then","response","json","results","species","episode","App","useState","ls","setCharacters","setFilterName","useEffect","charactersData","filter","toLowerCase","includes","exact","path","render","routeCharacterId","match","params","foundCharacter","find","parseInt","undefined","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f6a3279.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.de13d484.png\";","import React from \"react\";\nimport \"../stylesheets/Header.scss\";\nimport logo from \"../images/Rick_and_Morty_logo.png\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"Logo Rick and Morty\" />\n      <h1 className=\"header__title\">¿Cuánto sabes de tu personaje favorito?</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/CardDetail.scss\";\n\nconst CharacterDetail = (props) => {\n  return (\n    <div>\n      <Link to=\"/\">Volver al inicio</Link>\n\n      <section className=\"card__detail\">\n        <img\n          className=\"card__detail-img\"\n          src={props.character.image}\n          alt={props.character.name}\n        />\n        <div className=\"card__detail-box\">\n          <h2 className=\"card__detail-title\">{props.character.name}</h2>\n          <ul>\n            <li className=\"card__detail-dates\">\n              Status: {props.character.status}\n            </li>\n            <li className=\"card__detail-dates\">\n              Specie: {props.character.specie}\n            </li>\n            <li className=\"card__detail-dates\">\n              Origin: {props.character.origin}\n            </li>\n            <li className=\"card__detail-dates\">\n              Episodes: {props.character.episodes}\n            </li>\n          </ul>\n        </div>\n      </section>\n    </div>\n  );\n};\nexport default CharacterDetail;\n","import React from \"react\";\nimport \"../stylesheets/Filters.scss\";\n\nconst Input = (props) => {\n  const handleChange = (ev) => {\n    //manejador de evento que lanza esta fc por lifting\n    props.handleFilter({\n      value: ev.target.value,\n      key: \"name\",\n    });\n  };\n  return (\n    <input\n      className=\"filter__input\"\n      type=\"text\"\n      name=\"name\"\n      id=\"name\"\n      value={props.filterName}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport Input from \"./Input\";\nimport \"../stylesheets/Filters.scss\";\n\nconst Filters = (props) => {\n  const prevForm = (ev) => {\n    ev.preventDefault();\n  };\n\n  return (\n    <form className=\"filter__form\" onSubmit={prevForm}>\n      <label className=\"filter__label\" htmlFor=\"\">\n        Busca tu personaje preferido:\n      </label>\n      <Input filterName={props.filterName} handleFilter={props.handleFilter} />\n    </form>\n  );\n};\n\nexport default Filters;\n","import React from \"react\";\nimport \"../stylesheets/Card.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst CharacterCard = (props) => {\n  return (\n    <Link to={`/character/${props.character.id}`}>\n      <article className=\"card\">\n        <img\n          className=\"card__img\"\n          src={props.character.image}\n          alt={props.character.name}\n        />\n        <h2 className=\"card__title\">{props.character.name}</h2>\n        <ul className=\"card__ul\">\n          <li className=\"card__li\">\n            {props.character.specie} / {props.character.gender}\n          </li>\n          <li className=\"card__li\">{props.character.status} </li>\n        </ul>\n      </article>\n    </Link>\n  );\n};\nexport default CharacterCard;\n","import React from \"react\";\nimport \"../stylesheets/CharacterList.scss\";\nimport CharacterCard from \"./CharacterCard\";\n\nconst CharacterList = (props) => {\n  //si el personaje buscado no existe\n  if (props.characters.length === 0) {\n    return (\n      <h2>\n        Lo siento, el personaje que buscas no existe. ¡Vuelve a intentarlo!\n      </h2>\n    );\n    //si existe, lo pintamos\n  } else {\n    const characterElements = props.characters.map((character) => {\n      return <CharacterCard key={character.id} character={character} />;\n    });\n\n    return (\n      <section>\n        <ul className=\"cardList\">{characterElements}</ul>\n      </section>\n    );\n  }\n};\nexport default CharacterList;\n","import React from \"react\";\n\nimport Filters from \"./Filters\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\n\nfunction Main(props) {\n  return (\n    <main>\n      <Filters\n        handleFilter={props.handleFilter}\n        characters={props.filteredcharacters}\n        filterName={props.filterName}\n      />\n      <CharacterList characters={props.characters} />\n    </main>\n  );\n}\n\nexport default Main;\n","const get = (key, initial) => {\n  const data = localStorage.getItem(key);\n  if (data === null) {\n    return initial;\n  } else {\n    return JSON.parse(data);\n  }\n};\n\nconst set = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport default {\n  get: get,\n  set: set,\n};\n","const getApiData = () => {\n  return fetch(\"https://rickandmortyapi.com/api/character\")\n    .then((response) => response.json())\n    .then((data) => {\n      const clearData = data.results.map((character) => {\n        return {\n          image: character.image,\n          id: character.id,\n          name: character.name,\n          status: character.status,\n          specie: character.species,\n          gender: character.gender,\n          origin: character.origin.name,\n          episodes: character.episode.length,\n        };\n      });\n\n      return clearData;\n    });\n};\n\nexport default getApiData;\n","import \"../stylesheets/App.scss\";\nimport Header from \"./Header\";\nimport CharacterDetail from \"../components/CharacterDetail\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Main from \"./Main\";\nimport ls from \"../services/local-storage\";\nimport getApiData from \"../services/api\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState(ls.get(\"characters\", []));\n  const [filterName, setFilterName] = useState(\"\");\n\n  useEffect(() => {\n    //pido datos solo cuando no los tengo al arrancar\n    if (characters.length === 0) {\n      getApiData().then((charactersData) => {\n        setCharacters(charactersData);\n      });\n    }\n  }, []); //cuándo ejecutar el useEffect\n\n  //guardo en ls cada vez que cambia characters\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n  }, [characters]);\n\n  //función manejadora\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    }\n  };\n\n  //render filter by name\n  const filteredcharacters = characters.filter((character) => {\n    return character.name.toLowerCase().includes(filterName.toLowerCase());\n  });\n\n  //Route le pasa props a esta función\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = props.match.params.id;\n    //busco el personaje por su id\n    const foundCharacter = characters.find((character) => {\n      return character.id === parseInt(routeCharacterId);\n    });\n\n    if (foundCharacter !== undefined) {\n      return <CharacterDetail character={foundCharacter} />;\n    } else {\n      return <h3>El personaje que buscas no existe. ¡Vuelve a intentarlo!</h3>;\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Main\n            characters={filteredcharacters}\n            handleFilter={handleFilter}\n            filterName={filterName}\n          />\n        </Route>\n        <Route path=\"/character/:id\" render={renderCharacterDetail} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}